import random

def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 9)

def check_winner(board, player):
    for row in board:
        if all(cell == player for cell in row):
            return True

    for col in range(3):
        if all(board[row][col] == player for row in range(3)):
            return True

    if all(board[i][i] == player for i in range(3)) or all(board[i][2 - i] == player for i in range(3)):
        return True

    return False

def is_full(board):
    return all(cell != " " for row in board for cell in row)

def get_player_move(board):
    while True:
        try:
            move = int(input("Enter your move (1-9): "))
            if 1 <= move <= 9:
                row = (move - 1) // 3
                col = (move - 1) % 3
                if board[row][col] == " ":
                    return row, col
                else:
                    print("That position is already occupied. Try again.")
            else:
                print("Invalid input. Enter a number between 1 and 9.")
        except ValueError:
            print("Invalid input. Enter a number between 1 and 9.")

def play_game():
    board = [[" " for _ in range(3)] for _ in range(3)]
    current_player = "X"

    print("Welcome to Tic-Tac-Toe!")
    print_board(board)

    while True:
        print(f"Player {current_player}'s turn:")
        
        if current_player == "X":
            row, col = get_player_move(board)
        else:
            # For player O (computer in this case), you can add AI logic here.
            # For simplicity, let's have the computer make random moves.
            empty_cells = [(i, j) for i in range(3) for j in range(3) if board[i][j] == " "]
            row, col = random.choice(empty_cells)

        board[row][col] = current_player
        print_board(board)

        if check_winner(board, current_player):
            print(f"Player {current_player} wins! Congratulations!")
            break
        elif is_full(board):
            print("It's a tie! The game is over.")
            break

        current_player = "O" if current_player == "X" else "X"

if __name__ == "__main__":
    play_game()
